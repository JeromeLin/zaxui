// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Input renders correctly 1`] = `
<div
  class="za-input"
>
  <input
    autocomplete="off"
    type="text"
  />
</div>
`;

exports[`Input renders correctly if type isn't valid 1`] = `
<div
  class="za-input"
>
  <input
    autocomplete="off"
    type="xxx"
  />
</div>
`;

exports[`Input renders correctly if type=text and props includes rows 1`] = `
<div
  class="za-input za-input--textarea"
>
  <textarea
    rows="1"
  />
</div>
`;

exports[`Input renders onClear called correctly 1`] = `
<Input
  clearable={true}
  onChange={
    [MockFunction] {
      "calls": Array [
        Array [
          "My new value",
        ],
        Array [
          "",
        ],
      ],
      "results": Array [
        Object {
          "isThrow": false,
          "value": undefined,
        },
        Object {
          "isThrow": false,
          "value": undefined,
        },
      ],
    }
  }
  onClear={
    [MockFunction] {
      "calls": Array [
        Array [
          "",
        ],
      ],
      "results": Array [
        Object {
          "isThrow": false,
          "value": undefined,
        },
      ],
    }
  }
  type="text"
  value=""
>
  <InputBase
    clearable={true}
    disabled={false}
    onChange={
      [MockFunction] {
        "calls": Array [
          Array [
            "My new value",
          ],
          Array [
            "",
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
    onClear={
      [MockFunction] {
        "calls": Array [
          Array [
            "",
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
    prefixCls="za-input"
    readOnly={false}
    type="text"
    value=""
  >
    <div
      className="za-input za-input--focus za-input--clearable"
    >
      <input
        autoComplete="off"
        disabled={false}
        onBlur={[Function]}
        onChange={[Function]}
        onCompositionEnd={[Function]}
        onCompositionStart={[Function]}
        onCompositionUpdate={[Function]}
        onFocus={[Function]}
        type="text"
        value=""
      />
      <Icon
        className="za-input__clear"
        onClick={[Function]}
        prefixCls="za-icon"
        type="wrong-round-fill"
      >
        <i
          className="za-icon za-input__clear za-icon--wrong-round-fill"
          onClick={[Function]}
        />
      </Icon>
    </div>
  </InputBase>
</Input>
`;

exports[`Input showLength 1`] = `
<div
  class="za-input za-input--textarea"
>
  <textarea
    maxlength="100"
    rows="4"
  />
  <div
    class="za-input__length"
  >
    0/100
  </div>
</div>
`;

exports[`Input.Idcard renders correctly 1`] = `
<Input
  type="idcard"
>
  <InputNumber
    clearable={true}
    disabled={false}
    prefixCls="za-input"
    type="idcard"
  >
    <div
      className="za-input za-input--number"
      onClick={[Function]}
    >
      <div
        className="za-input__content"
      >
        <div
          className="za-input__placeholder"
        />
        <div
          className="za-input__virtual-input"
        />
        <input
          disabled={false}
          type="hidden"
          value=""
        />
        <KeyboardPicker
          onKeyClick={[Function]}
          prefixCls="za-keyboard-picker"
          type="idcard"
          visible={false}
        >
          <Popup
            mask={false}
            visible={false}
          >
            <Portal
              animationDuration={200}
              autoClose={false}
              direction="bottom"
              handlePortalUnmount={[Function]}
              mask={false}
              maskType="normal"
              prefixCls="za-popup"
              stayTime={3000}
              visible={false}
            />
          </Popup>
        </KeyboardPicker>
      </div>
    </div>
  </InputNumber>
</Input>
`;

exports[`Input.Number renders correctly 1`] = `
<Input
  type="number"
>
  <InputNumber
    clearable={true}
    disabled={false}
    prefixCls="za-input"
    type="number"
  >
    <div
      className="za-input za-input--number"
      onClick={[Function]}
    >
      <div
        className="za-input__content"
      >
        <div
          className="za-input__placeholder"
        />
        <div
          className="za-input__virtual-input"
        />
        <input
          disabled={false}
          type="hidden"
          value=""
        />
        <KeyboardPicker
          onKeyClick={[Function]}
          prefixCls="za-keyboard-picker"
          type="number"
          visible={false}
        >
          <Popup
            mask={false}
            visible={false}
          >
            <Portal
              animationDuration={200}
              autoClose={false}
              direction="bottom"
              handlePortalUnmount={[Function]}
              mask={false}
              maskType="normal"
              prefixCls="za-popup"
              stayTime={3000}
              visible={false}
            />
          </Popup>
        </KeyboardPicker>
      </div>
    </div>
  </InputNumber>
</Input>
`;

exports[`Input.Number renders onClear called correctly 1`] = `
<Input
  onChange={
    [MockFunction] {
      "calls": Array [
        Array [
          "",
        ],
      ],
      "results": Array [
        Object {
          "isThrow": false,
          "value": undefined,
        },
      ],
    }
  }
  onClear={
    [MockFunction] {
      "calls": Array [
        Array [
          "",
        ],
      ],
      "results": Array [
        Object {
          "isThrow": false,
          "value": undefined,
        },
      ],
    }
  }
  type="number"
  value=""
>
  <InputNumber
    clearable={true}
    disabled={false}
    onChange={
      [MockFunction] {
        "calls": Array [
          Array [
            "",
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
    onClear={
      [MockFunction] {
        "calls": Array [
          Array [
            "",
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
    prefixCls="za-input"
    type="number"
    value=""
  >
    <div
      className="za-input za-input--number za-input--focus za-input--clearable"
      onClick={[Function]}
    >
      <div
        className="za-input__content"
      >
        <div
          className="za-input__placeholder"
        />
        <div
          className="za-input__virtual-input"
        />
        <input
          disabled={false}
          type="hidden"
          value=""
        />
        <KeyboardPicker
          onKeyClick={[Function]}
          prefixCls="za-keyboard-picker"
          type="number"
          visible={true}
        >
          <Popup
            mask={false}
            visible={true}
          >
            <Portal
              animationDuration={200}
              autoClose={false}
              direction="bottom"
              handlePortalUnmount={[Function]}
              mask={false}
              maskType="normal"
              prefixCls="za-popup"
              stayTime={3000}
              visible={true}
            >
              <Portal
                containerInfo={
                  <div
                    class=" popup-container"
                  >
                    <div
                      class="za-popup za-popup--bottom za-popup--hidden"
                    >
                      <div
                        class="za-popup__wrapper"
                      >
                        <div
                          class="za-keyboard-picker"
                        >
                          <div
                            class="za-keyboard"
                          >
                            <div
                              class="za-keyboard__keys"
                            >
                              <div
                                class="za-keyboard__item"
                              >
                                1
                              </div>
                              <div
                                class="za-keyboard__item"
                              >
                                2
                              </div>
                              <div
                                class="za-keyboard__item"
                              >
                                3
                              </div>
                              <div
                                class="za-keyboard__item"
                              >
                                4
                              </div>
                              <div
                                class="za-keyboard__item"
                              >
                                5
                              </div>
                              <div
                                class="za-keyboard__item"
                              >
                                6
                              </div>
                              <div
                                class="za-keyboard__item"
                              >
                                7
                              </div>
                              <div
                                class="za-keyboard__item"
                              >
                                8
                              </div>
                              <div
                                class="za-keyboard__item"
                              >
                                9
                              </div>
                              <div
                                class="za-keyboard__item za-keyboard__item--disabled"
                              />
                              <div
                                class="za-keyboard__item"
                              >
                                0
                              </div>
                              <div
                                class="za-keyboard__item"
                              >
                                <i
                                  class="za-icon za-icon--keyboard"
                                />
                              </div>
                            </div>
                            <div
                              class="za-keyboard__handle"
                            >
                              <div
                                class="za-keyboard__item"
                              >
                                <i
                                  class="za-icon za-icon--deletekey"
                                />
                              </div>
                              <div
                                class="za-keyboard__item za-keyboard__item--ok"
                              >
                                OK
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                }
              >
                <div
                  className="za-popup za-popup--bottom za-popup--hidden"
                >
                  <div
                    className="za-popup__wrapper"
                    style={
                      Object {
                        "WebkitTransitionDuration": "200ms",
                        "transitionDuration": "200ms",
                      }
                    }
                  >
                    <div
                      className="za-keyboard-picker"
                    >
                      <ForwardRef(forwardRefFactory)
                        onKeyClick={[Function]}
                        type="number"
                        visible={true}
                      >
                        <LocaleReceiver
                          forwardedRef={null}
                          onKeyClick={[Function]}
                          type="number"
                          visible={true}
                        >
                          <Keyboard
                            locale={
                              Object {
                                "okText": "OK",
                              }
                            }
                            localeCode="en"
                            onKeyClick={[Function]}
                            prefixCls="za-keyboard"
                            type="number"
                            visible={true}
                          >
                            <div
                              className="za-keyboard"
                            >
                              <div
                                className="za-keyboard__keys"
                              >
                                <div
                                  className="za-keyboard__item"
                                  key="0"
                                  onClick={[Function]}
                                >
                                  1
                                </div>
                                <div
                                  className="za-keyboard__item"
                                  key="1"
                                  onClick={[Function]}
                                >
                                  2
                                </div>
                                <div
                                  className="za-keyboard__item"
                                  key="2"
                                  onClick={[Function]}
                                >
                                  3
                                </div>
                                <div
                                  className="za-keyboard__item"
                                  key="3"
                                  onClick={[Function]}
                                >
                                  4
                                </div>
                                <div
                                  className="za-keyboard__item"
                                  key="4"
                                  onClick={[Function]}
                                >
                                  5
                                </div>
                                <div
                                  className="za-keyboard__item"
                                  key="5"
                                  onClick={[Function]}
                                >
                                  6
                                </div>
                                <div
                                  className="za-keyboard__item"
                                  key="6"
                                  onClick={[Function]}
                                >
                                  7
                                </div>
                                <div
                                  className="za-keyboard__item"
                                  key="7"
                                  onClick={[Function]}
                                >
                                  8
                                </div>
                                <div
                                  className="za-keyboard__item"
                                  key="8"
                                  onClick={[Function]}
                                >
                                  9
                                </div>
                                <div
                                  className="za-keyboard__item za-keyboard__item--disabled"
                                  key="9"
                                  onClick={[Function]}
                                />
                                <div
                                  className="za-keyboard__item"
                                  key="10"
                                  onClick={[Function]}
                                >
                                  0
                                </div>
                                <div
                                  className="za-keyboard__item"
                                  key="11"
                                  onClick={[Function]}
                                >
                                  <Icon
                                    prefixCls="za-icon"
                                    type="keyboard"
                                  >
                                    <i
                                      className="za-icon za-icon--keyboard"
                                    />
                                  </Icon>
                                </div>
                              </div>
                              <div
                                className="za-keyboard__handle"
                              >
                                <div
                                  className="za-keyboard__item"
                                  onMouseDown={[Function]}
                                  onMouseUp={[Function]}
                                  onTouchCancel={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchStart={[Function]}
                                >
                                  <Icon
                                    prefixCls="za-icon"
                                    type="deletekey"
                                  >
                                    <i
                                      className="za-icon za-icon--deletekey"
                                    />
                                  </Icon>
                                </div>
                                <div
                                  className="za-keyboard__item za-keyboard__item--ok"
                                  onClick={[Function]}
                                >
                                  OK
                                </div>
                              </div>
                            </div>
                          </Keyboard>
                        </LocaleReceiver>
                      </ForwardRef(forwardRefFactory)>
                    </div>
                  </div>
                </div>
              </Portal>
            </Portal>
          </Popup>
        </KeyboardPicker>
      </div>
      <Icon
        className="za-input__clear"
        onClick={[Function]}
        prefixCls="za-icon"
        type="wrong-round-fill"
      >
        <i
          className="za-icon za-input__clear za-icon--wrong-round-fill"
          onClick={[Function]}
        />
      </Icon>
    </div>
  </InputNumber>
</Input>
`;

exports[`Input.Price renders correctly 1`] = `
<Input
  type="price"
>
  <InputNumber
    clearable={true}
    disabled={false}
    prefixCls="za-input"
    type="price"
  >
    <div
      className="za-input za-input--number"
      onClick={[Function]}
    >
      <div
        className="za-input__content"
      >
        <div
          className="za-input__placeholder"
        />
        <div
          className="za-input__virtual-input"
        />
        <input
          disabled={false}
          type="hidden"
          value=""
        />
        <KeyboardPicker
          onKeyClick={[Function]}
          prefixCls="za-keyboard-picker"
          type="price"
          visible={false}
        >
          <Popup
            mask={false}
            visible={false}
          >
            <Portal
              animationDuration={200}
              autoClose={false}
              direction="bottom"
              handlePortalUnmount={[Function]}
              mask={false}
              maskType="normal"
              prefixCls="za-popup"
              stayTime={3000}
              visible={false}
            />
          </Popup>
        </KeyboardPicker>
      </div>
    </div>
  </InputNumber>
</Input>
`;

exports[`Input.Textarea autoHeight 1`] = `
<Input
  autoHeight={true}
  onChange={[MockFunction]}
  rows={4}
  type="text"
  value="foo"
>
  <InputTextarea
    autoHeight={true}
    disabled={false}
    focused={false}
    onChange={[MockFunction]}
    prefixCls="za-input"
    rows={4}
    showLength={false}
    type="text"
    value="foo"
  >
    <div
      className="za-input za-input--textarea"
    >
      <textarea
        disabled={false}
        onBlur={[Function]}
        onChange={[Function]}
        onCompositionEnd={[Function]}
        onCompositionStart={[Function]}
        onCompositionUpdate={[Function]}
        onFocus={[Function]}
        rows={4}
        value="foo"
      />
    </div>
  </InputTextarea>
</Input>
`;

exports[`Input.Textarea renders correctly 1`] = `
<div
  class="za-input za-input--textarea"
>
  <textarea
    rows="4"
  />
</div>
`;
